diff -ur glibc-2.24-orig/nss/nsswitch.c glibc-2.24/nss/nsswitch.c
--- glibc-2.24-orig/nss/nsswitch.c	2016-12-07 13:21:53.630202041 +0100
+++ glibc-2.24/nss/nsswitch.c	2016-12-07 13:34:12.591288762 +0100
@@ -34,6 +34,7 @@
 #include <shadow.h>
 
 #if !defined DO_STATIC_NSS || defined SHARED
+# include <unistd.h>   /* for __libc_enable_secure */
 # include <gnu/lib-names.h>
 #endif
 
@@ -320,6 +321,25 @@
 				*(const char *const *) p2);
 }
 
+#ifndef UNIQUE_ID
+# error UNIQUE_ID is undefined
+#endif
+
+static const char *nss_root = "/run/nss-modules/" UNIQUE_ID "/";
+
+void *
+nss_load_library_prefix (const char* prefix, const char *name)
+{
+  size_t shlen = (strlen (nss_root) + strlen (prefix) + strlen (name) + 1);
+  char shlib_name[shlen];
+
+  __stpcpy (__stpcpy (__stpcpy (shlib_name,
+                                nss_root),
+                      prefix),
+            name);
+  
+  return __libc_dlopen (shlib_name);
+}
 
 #if !defined DO_STATIC_NSS || defined SHARED
 /* Load library.  */
@@ -347,7 +367,11 @@
 		      + strlen (__nss_shlib_revision) + 1);
       int saved_errno = errno;
       char shlib_name[shlen];
-
+      void *lib_handle = NULL;
+      size_t size = 9 + 10 + 1 + 1; /* "per-user/" + (max uid digits) + "/" + EOF */
+      char buf[size]; 
+      int i;
+      
       /* Construct shared object name.  */
       __stpcpy (__stpcpy (__stpcpy (__stpcpy (shlib_name,
 					      "libnss_"),
@@ -355,7 +379,17 @@
 			  ".so"),
 		__nss_shlib_revision);
 
-      ni->library->lib_handle = __libc_dlopen (shlib_name);
+      if (__builtin_expect (! __libc_enable_secure, 1))
+        {
+          i = snprintf (buf, sizeof (buf), "per-user/%d/", getuid ());
+          if (i < size)
+            lib_handle = nss_load_library_prefix ((const char *) buf, (const char *) shlib_name);
+        }
+
+      if (lib_handle == NULL)
+        lib_handle = nss_load_library_prefix ("system/", (const char *) shlib_name);
+
+      ni->library->lib_handle = lib_handle ?: __libc_dlopen (shlib_name);
       if (ni->library->lib_handle == NULL)
 	{
 	  /* Failed to load the library.  */
